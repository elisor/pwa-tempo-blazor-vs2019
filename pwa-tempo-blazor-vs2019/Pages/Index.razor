@page "/"
@using Data;
@using Newtonsoft.Json;

<div id="root">
    <div class="main-container">
        <input type="text" class="search" placeholder="Pesquisa" @bind-value="@query" @bind-value:event="oninput" @onkeypress=@(async () => await PesquisarTempo()) />
        @if (resultado != null && resultado.cod == 200)
        {
            <div class="city">
                <h2 class="city-name">
                    <span>@resultado.name</span>
                    <sup>@resultado.sys.country</sup>
                </h2>
                <div class="city-temp">
                    @Math.Round(resultado.main.temp)
                    <sup>&deg;C</sup>
                </div>
                <div class="info">
                    <img class="city-icon" src="@(imgSrc)" alt="@(resultado.weather[0].description)" />
                    <p>@resultado.weather[0].description</p>
                </div>
            </div>
        }
        else
        {

        }
    </div>
</div>

@code {
    string query;
    ClimaTempo resultado;
    string imgSrc;

    private async Task PesquisarTempo()
    {
        string url = $"https://api.openweathermap.org/data/2.5/weather?q={query}&units=metric&APPID=43b05d094e96d44927b25b795cc9359f";

        using (var cliente = new HttpClient())
        {
            HttpResponseMessage responseMessage = await cliente.GetAsync(url);

            resultado = JsonConvert.DeserializeObject<ClimaTempo>(await responseMessage.Content.ReadAsStringAsync());

            if (resultado.cod == 200)
            {
                imgSrc = $"https://openweathermap.org/img/wn/{@resultado.weather[0].icon}@2x.png";
            }
        }
    }
}
